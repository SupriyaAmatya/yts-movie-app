{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Dell\\\\Desktop\\\\React-practice\\\\yts-app - Copy\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\React-practice\\\\yts-app - Copy\\\\src\\\\components\\\\movieDetails\\\\MovieInfo.js\";\nimport React from 'react';\nimport imdb from '../../assets/imdb.png';\n\nconst MovieInfo = props => {\n  const movie = props.movie;\n  console.log(movie);\n  const geners = [];\n\n  for (const _ref of movie.geners.entries()) {\n    var _ref2 = _slicedToArray(_ref, 2);\n\n    const index = _ref2[0];\n    const value = _ref2[1];\n    geners.push(React.createElement(\"li\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, value));\n  } // const genresList = genres.map((genre)=>{\n  //   return(\n  //     <ul>\n  //       <li>{genre}</li>\n  //       <li>/</li>\n  //     </ul>\n  //   )\n  // })\n  // console.log(genresList);\n\n\n  return React.createElement(\"div\", {\n    className: \"movie-info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"movie-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, movie.title), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, movie.year), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, geners)), React.createElement(\"div\", {\n    className: \"torrent-quality\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"em\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Available in:\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    className: \"download-torrent\",\n    href: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), \"3d\"), React.createElement(\"a\", {\n    className: \"download-torrent\",\n    href: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), \"3d\"), React.createElement(\"a\", {\n    className: \"download-torrent\",\n    href: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), \"3d\"))), React.createElement(\"div\", {\n    className: \"imdb\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: imdb,\n    alt: \"imdb\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), \" \", React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"8.9\")));\n};\n\nexport default MovieInfo;","map":{"version":3,"sources":["C:\\Users\\Dell\\Desktop\\React-practice\\yts-app - Copy\\src\\components\\movieDetails\\MovieInfo.js"],"names":["React","imdb","MovieInfo","props","movie","console","log","geners","entries","index","value","push","title","year"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,uBAAjB;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA,QACnBC,KADmB,GACTD,KADS,CACnBC,KADmB;AAE3BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAEA,QAAMG,MAAM,GAAG,EAAf;;AACA,qBAA4BH,KAAK,CAACG,MAAN,CAAaC,OAAb,EAA5B,EAAmD;AAAA;;AAAA,UAAxCC,KAAwC;AAAA,UAAjCC,KAAiC;AACjDH,IAAAA,MAAM,CAACI,IAAP,CAAY;AAAI,MAAA,GAAG,EAAEF,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiBC,KAAjB,CAAZ;AACD,GAP0B,CAS3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,SACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKN,KAAK,CAACQ,KAAX,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKR,KAAK,CAACS,IAAX,CAFF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,MADH,CAJF,CADF,EASE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,kBAAb;AAAgC,IAAA,IAAI,EAAC,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,OADF,EAKE;AAAG,IAAA,SAAS,EAAC,kBAAb;AAAgC,IAAA,IAAI,EAAC,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,OALF,EASE;AAAG,IAAA,SAAS,EAAC,kBAAb;AAAgC,IAAA,IAAI,EAAC,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,OATF,CAFF,CATF,EA0BE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAEN,IAAV;AAAgB,IAAA,GAAG,EAAC,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,OACoC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADpC,CA1BF,CADF;AAgCD,CAnDD;;AAqDA,eAAeC,SAAf","sourcesContent":["import React from 'react';\r\nimport imdb from '../../assets/imdb.png';\r\n\r\nconst MovieInfo = (props) => {\r\n  const { movie } = props;\r\n  console.log(movie);\r\n\r\n  const geners = []\r\n  for(const [index, value] of movie.geners.entries()){\r\n    geners.push(<li key={index}>{value}</li>)\r\n  }\r\n  \r\n  // const genresList = genres.map((genre)=>{\r\n  //   return(\r\n  //     <ul>\r\n  //       <li>{genre}</li>\r\n  //       <li>/</li>\r\n  //     </ul>\r\n  //   )\r\n  // })\r\n  // console.log(genresList);\r\n\r\n  return (\r\n    <div className=\"movie-info\">\r\n      <div className=\"movie-title\">\r\n        <h1>{movie.title}</h1>\r\n        <h2>{movie.year}</h2>\r\n        {/* <h2>{movie.genres}</h2> */}\r\n        <ul>\r\n          {geners}\r\n        </ul>\r\n      </div>\r\n      <div className=\"torrent-quality\">\r\n        <em>Available in:</em>\r\n        <div>\r\n          <a className='download-torrent' href=\"\">\r\n            <span></span>\r\n                  3d\r\n                </a>\r\n          <a className='download-torrent' href=\"\">\r\n            <span></span>\r\n                  3d\r\n                </a>\r\n          <a className='download-torrent' href=\"\">\r\n            <span></span>\r\n                  3d\r\n                </a>\r\n        </div>\r\n      </div>\r\n      <div className=\"imdb\">\r\n        <img src={imdb} alt=\"imdb\"></img> <span>8.9</span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MovieInfo"]},"metadata":{},"sourceType":"module"}