{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\React-practice\\\\yts-app - Copy\\\\src\\\\components\\\\movieDetails\\\\MovieInfo.js\";\nimport React from 'react';\nimport imdb from '../../assets/imdb.png';\n\nconst MovieInfo = props => {\n  const movie = props.movie;\n  const genresList = movie.genres ? movie.genres.map((genre, index) => {\n    return React.createElement(\"li\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, genre, \" \", React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, \" / \"), \" \");\n  }) : null;\n  const torrentList = movie.torrents ? movie.torrents.map((torrent, index) => {\n    return React.createElement(\"a\", {\n      className: \"download-torrent\",\n      href: torrent.url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, torrent.quality);\n  }) : null;\n  return React.createElement(\"div\", {\n    className: \"movie-info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"movie-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, movie.title), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, movie.year), React.createElement(\"ul\", {\n    className: \"genre-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, genresList)), React.createElement(\"div\", {\n    className: \"torrent-quality\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"em\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Available in:\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, torrentList, torrentList)), React.createElement(\"div\", {\n    className: \"imdb\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: imdb,\n    alt: \"imdb\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), \" \", React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, movie.rating)));\n};\n\nexport default MovieInfo;","map":{"version":3,"sources":["C:\\Users\\Dell\\Desktop\\React-practice\\yts-app - Copy\\src\\components\\movieDetails\\MovieInfo.js"],"names":["React","imdb","MovieInfo","props","movie","genresList","genres","map","genre","index","torrentList","torrents","torrent","url","quality","title","year","rating"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,uBAAjB;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA,QACnBC,KADmB,GACTD,KADS,CACnBC,KADmB;AAG3B,QAAMC,UAAU,GAAGD,KAAK,CAACE,MAAN,GACjBF,KAAK,CAACE,MAAN,CAAaC,GAAb,CAAiB,CAACC,KAAD,EAAQC,KAAR,KAAkB;AACjC,WACE;AAAI,MAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiBD,KAAjB,OAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAxB,MADF;AAGD,GAJD,CADiB,GAMf,IANJ;AAQA,QAAME,WAAW,GAAGN,KAAK,CAACO,QAAN,GAClBP,KAAK,CAACO,QAAN,CAAeJ,GAAf,CAAmB,CAACK,OAAD,EAAUH,KAAV,KAAoB;AACrC,WACE;AAAG,MAAA,SAAS,EAAC,kBAAb;AAAgC,MAAA,IAAI,EAAEG,OAAO,CAACC,GAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,OAAO,CAACE,OADX,CADF;AAKD,GAND,CADkB,GAQhB,IARJ;AAUA,SACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKV,KAAK,CAACW,KAAX,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKX,KAAK,CAACY,IAAX,CAFF,EAGE;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGX,UADH,CAHF,CADF,EAQE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGK,WADH,EAEGA,WAFH,CAFF,CARF,EAgBE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAET,IAAV;AAAgB,IAAA,GAAG,EAAC,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,OACoC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOG,KAAK,CAACa,MAAb,CADpC,CAhBF,CADF;AAsBD,CA3CD;;AA6CA,eAAef,SAAf","sourcesContent":["import React from 'react';\r\nimport imdb from '../../assets/imdb.png';\r\n\r\nconst MovieInfo = (props) => {\r\n  const { movie } = props;\r\n\r\n  const genresList = movie.genres ? (\r\n    movie.genres.map((genre, index) => {\r\n      return (\r\n        <li key={index}>{genre} <span> / </span> </li>\r\n      )\r\n    })\r\n  ) : null\r\n\r\n  const torrentList = movie.torrents ? (\r\n    movie.torrents.map((torrent, index) => {\r\n      return(\r\n        <a className='download-torrent' href={torrent.url}>\r\n          {torrent.quality}\r\n        </a>\r\n      )\r\n    })\r\n  ) : null\r\n\r\n  return (\r\n    <div className=\"movie-info\">\r\n      <div className=\"movie-title\">\r\n        <h1>{movie.title}</h1>\r\n        <h2>{movie.year}</h2>\r\n        <ul className=\"genre-list\">\r\n          {genresList}\r\n        </ul>\r\n      </div>\r\n      <div className=\"torrent-quality\">\r\n        <em>Available in:</em>\r\n        <div>\r\n          {torrentList}\r\n          {torrentList}\r\n\r\n        </div>\r\n      </div>\r\n      <div className=\"imdb\">\r\n        <img src={imdb} alt=\"imdb\"></img> <span>{movie.rating}</span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MovieInfo"]},"metadata":{},"sourceType":"module"}